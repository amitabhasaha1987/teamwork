@model DataAccess.Models.Merchant
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<div class="page-header">
    <h1>
        Add Merchant
    </h1>
</div>

<div class="row">

    @using (Html.BeginForm("Create", "Merchant", FormMethod.Post, new { @class = "form-horizontal", @role = "form" }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })


        if (TempData["Status"] != null && Convert.ToString(TempData["Status"]) == "1")
        {
            <div class="form-group">
                <div class="col-sm-3 control-label"></div>
                <div class="col-sm-9">
                    <ul>
                        <li>
                            <i class="ace-icon fa fa-check bigger-110 green"></i>

                            @Html.Label("Profile added successfully", new { @class = "control-label no-padding-middle" })
                        </li>
                    </ul>
                </div>

            </div>
        }

        <div class="form-group">
            @Html.LabelFor(x => x.username, new { @class = "col-sm-3 control-label no-padding-right" })

            <div class="col-sm-9">
                @Html.TextBoxFor(m => m.username, new { @class = "col-xs-10 col-sm-5", placeholder = "User Name" })
                @Html.ValidationMessageFor(m => m.username, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(x => x.contact_email, new { @class = "col-sm-3 control-label no-padding-right" })

            <div class="col-sm-9">
                @Html.TextBoxFor(m => m.contact_email, new { @class = "col-xs-10 col-sm-5", placeholder = "Email" })
                @Html.ValidationMessageFor(m => m.contact_email, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="space-4"></div>

        <div class="form-group">
            @Html.LabelFor(x => x.merchant_name, new { @class = "col-sm-3 control-label no-padding-right" })

            <div class="col-sm-9">
                @Html.TextBoxFor(m => m.merchant_name, new { @class = "col-xs-10 col-sm-5", placeholder = "Email" })
                @Html.ValidationMessageFor(m => m.merchant_name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="space-4"></div>

        <div class="form-group">
            @Html.LabelFor(x => x.password, new { @class = "col-sm-3 control-label no-padding-right" })

            <div class="col-sm-9">
                @Html.TextBoxFor(m => m.password, new { @class = "col-xs-10 col-sm-5", placeholder = "Password" })
                @Html.ValidationMessageFor(m => m.password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="space-4"></div>

        <div class="form-group">
            @Html.LabelFor(x => x.ConfirmPassword, new { @class = "col-sm-3 control-label no-padding-right" })

            <div class="col-sm-9">
                @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "col-xs-10 col-sm-5", placeholder = "Retype Pass" })
                @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="space-4"></div>

        <div class="clearfix form-actions">
            <div class="col-md-offset-3 col-md-9">
                <button class="btn btn-info" type="submit" value="1" name="command">
                    <i class="ace-icon fa fa-check bigger-110"></i>
                    Create
                </button>

                <button class="btn" type="submit" value="2" name="command">
                    <i class="ace-icon fa fa-undo bigger-110"></i>
                    Create and Send Mail
                </button>
            </div>
        </div>
    }
    <!-- #section:elements.form -->



</div>